
var filters = {
  toFix: function (value) {
    return parseFloat(value).toFixed(2)//此处2为保留两位小数
  },
  calcDate: function (date, currentDate, autoMin){
    date = date.split(' ')
    currentDate = currentDate.split(' ')

    var dateMS = date[1].split(':')
    var currentMS = currentDate[1].split(':')

    var dateYMD = date[0].split('-')
    var currentYMD = currentDate[0].split('-')

    if (date[0] == currentDate[0] || currentYMD[2] - dateYMD[2] == 1 && currentMS[0] - dateMS[0] < 0) {
      var subHours = currentMS[0] - dateMS[0]
      if (subHours < 0) {
        subHours += 24
      }
      var subMin = currentMS[1] - dateMS[1] + autoMin
      if (subMin < 0) {
        subHours--;
        subMin += 60;
      }
      if (subMin > 59){
        subHours += parseInt(subMin / 60)
        subMin = parseInt(subMin % 60)
      }
      if (subHours < 10) {
        subHours = '0' + subHours;
      }
      if (subMin < 10) {
        subMin = '0' + subMin
      }
      return subHours + ":" + subMin + "h"
    } else {
      return ">1天"
    }
  },
  getYMD: function(date){
    return date.substring(0,10)
  },
  subString:function(data,strIndex,endIndex){
    return data.substring(strIndex,endIndex)
  },
  payWay:function(payWay){
    var status = payWay.substring(1, 2)

    if (status != undefined && status != ""){
      if (status == '1') {
        return "微信"
      }
      if (status == '2') {
        return "支付宝"
      }
      if (status == '3') {
        return "银联"
      }
    }else{
      if (payWay == '1') {
        return "现金"
      }
     
      if (payWay == '4') {
        return "POS"
      }
      if (payWay == '5') {
        return "储值"
      }
      if (payWay == '6') {
        return "其他"
      }
    }
    

  },
  /**
   * 解析商品图片
   */
  parseImage:function(map){
    return JSON.parse(map);
  },
  /**
   * 该类别在购物车上的数量
   */
  catNum: function (goods, gtype_pk){
    var num = 0;
    if(goods == undefined || goods == '{}'){
      return 0;
    }
    goods.forEach(function(good){

      if (gtype_pk == good.GTYPE_FK || gtype_pk == undefined){
          num += good.GOODS_NUMBER;
        }
     
      
    })
    return num;
  },
  /**
   * 该商品在购物车上的数量
   */
  goodsNum:function(goods,shoppingCartGoods){
      var num = 0;
      if (shoppingCartGoods == undefined || shoppingCartGoods == '{}') {
          return 0;
      }
      shoppingCartGoods.forEach(function (g) {

          if (goods.GOODS_PK == g.GOODS_PK) {
              num += g.GOODS_NUMBER;
          }


      })
      return num;
  },
  /**
   * 判断该商品有规格选择吗
   */
    isSingleGoods: function (every) {
        if (every.GOODS_SPECIFICATION == '[]' && every.GOODS_RECIPE == '[]' && every.GOODS_TASTE == '[]'){
            return true;
        }
        return false;
    },
  /**
   * 解析商品的口味、规格、做法
   */
  parseGoods:function(goods){
    return JSON.parse(goods)
  },
  /**
   * 解析成json
   */
  parseJSON:function(param){
    return JSON.parse(param)
  },
  /**
   * 判断字符串为不为空
   */
  isNotUndefined:function(str){
    if (str == undefined || str == null || str == ''){
      return false
    }
    return true
  },
  /**
   * 判断字符串包不包含
   */
  goodsContain:function(str, str2){
    if(str == undefined || str == {}){
        return false;
    }
      if (str.GOODS_NAME.indexOf(str2) != -1 || str.GOODS_CODE.indexOf(str2) != -1){
      return true;
    }
    return false;
  }
}
module.exports = {
  toFix: filters.toFix,
  calcDate: filters.calcDate,
  getYMD: filters.getYMD,
  subString: filters.subString,
  payWay: filters.payWay,
  parseImage: filters.parseImage,
  showCatNum: filters.showCatNum,
  catNum: filters.catNum,
  parseGoods: filters.parseGoods,
  parseJSON: filters.parseJSON,
  isNotUndefined: filters.isNotUndefined,
  goodsContain: filters.goodsContain,
    goodsNum: filters.goodsNum,
    isSingleGoods: filters.isSingleGoods
}